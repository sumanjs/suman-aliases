{
  "_args": [
    [
      {
        "raw": "function-arguments@^1.0.4",
        "scope": null,
        "escapedName": "function-arguments",
        "name": "function-arguments",
        "rawSpec": "^1.0.4",
        "spec": ">=1.0.4 <2.0.0",
        "type": "range"
      },
      "/Users/alexamil/WebstormProjects/oresoftware/sumanjs/suman-aliases/projects/suman/node_modules/suman"
    ]
  ],
  "_from": "function-arguments@>=1.0.4 <2.0.0",
  "_id": "function-arguments@1.0.8",
  "_inCache": true,
  "_location": "/function-arguments",
  "_nodeVersion": "7.0.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/function-arguments-1.0.8.tgz_1477746885644_0.20846919971518219"
  },
  "_npmUser": {
    "name": "tunnckocore",
    "email": "mameto_100@mail.bg"
  },
  "_npmVersion": "4.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "function-arguments@^1.0.4",
    "scope": null,
    "escapedName": "function-arguments",
    "name": "function-arguments",
    "rawSpec": "^1.0.4",
    "spec": ">=1.0.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/suman"
  ],
  "_resolved": "https://registry.npmjs.org/function-arguments/-/function-arguments-1.0.8.tgz",
  "_shasum": "b9a01daca6b894eff8c3d36840375ed9636a6c0f",
  "_shrinkwrap": null,
  "_spec": "function-arguments@^1.0.4",
  "_where": "/Users/alexamil/WebstormProjects/oresoftware/sumanjs/suman-aliases/projects/suman/node_modules/suman",
  "author": {
    "name": "Charlike Mike Reagent",
    "email": "@tunnckoCore",
    "url": "http://www.tunnckocore.tk"
  },
  "bugs": {
    "url": "https://github.com/tunnckoCore/function-arguments/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "description": "Get arguments of a function, useful for and used in dependency injectors. Works for regular functions, generator functions and arrow functions.",
  "devDependencies": {
    "commitizen": "^2.8.6",
    "coveralls": "^2.11.12",
    "cz-conventional-changelog": "^1.2.0",
    "mukla": "^0.4.1",
    "nyc": "^8.1.0",
    "pre-commit": "^1.1.3",
    "standard": "^8.4.0",
    "standard-version": "^2.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b9a01daca6b894eff8c3d36840375ed9636a6c0f",
    "tarball": "https://registry.npmjs.org/function-arguments/-/function-arguments-1.0.8.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "648e5134444f2076a5702812d70d885a37277374",
  "homepage": "https://github.com/tunnckoCore/function-arguments#readme",
  "keywords": [
    "args",
    "arguments",
    "arrow",
    "arrow-function",
    "arrows",
    "dependency",
    "deps",
    "fn",
    "func",
    "function",
    "function-arguments",
    "generator",
    "generators",
    "get",
    "inject",
    "injectors",
    "parameters",
    "params",
    "regular",
    "useful"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "tunnckocore",
      "email": "mameto_100@mail.bg"
    }
  ],
  "name": "function-arguments",
  "optionalDependencies": {},
  "precommit.silent": true,
  "readme": "# [function-arguments][author-www-url] [![npmjs.com][npmjs-img]][npmjs-url] [![The MIT License][license-img]][license-url] [![npm downloads][downloads-img]][downloads-url] \n\n> Get arguments of a function, useful for and used in dependency injectors. Works for regular functions, generator functions and arrow functions.\n\n[![code climate][codeclimate-img]][codeclimate-url] [![standard code style][standard-img]][standard-url] [![travis build status][travis-img]][travis-url] [![coverage status][coveralls-img]][coveralls-url] [![dependency status][david-img]][david-url]\n\n## Install\n> Install with [npm](https://www.npmjs.com/)\n\n```\n$ npm i function-arguments --save\n```\n\n## Usage\n> For more use-cases see the [tests](./test.js)\n\n```js\nconst functionArguments = require('function-arguments')\n```\n\n## API\n\n### [functionArguments](index.js#L33)\n> Get function arguments names.\n\n**Params**\n\n* `fn` **{Function}**: Function from which to get arguments names.    \n* `returns` **{Array}**  \n\n**Example**\n\n```js\nvar fnArgs = require('function-arguments')\n\nconsole.log(fnArgs(function (a, b, c) {})) // => [ 'a', 'b', 'c' ]\nconsole.log(fnArgs(function named (a , b, c) {})) // => [ 'a', 'b', 'c' ]\n\nconsole.log(fnArgs(a => {})) // => [ 'a' ]\nconsole.log(fnArgs((a, b) => {})) // => [ 'a', 'b' ]\n\nconsole.log(fnArgs(function * (a ,b, c) {})) // => [ 'a', 'b', 'c' ]\nconsole.log(fnArgs(function * named (a ,b, c) {})) // => [ 'a', 'b', 'c' ]\n```\n\n### Works when using comments\n> As it works for ES2015, it also works if you use comments in weird places.\n\n```js\nconsole.log(fnArgs(function /* something may */ (\n  // go,\n  go,\n  /* wrong, */\n  here\n  // (when, using, comments) {}\n) { return 1 })) // => [ 'go', 'here' ]\n```\n\n## Related\n- [flatten-arguments](https://www.npmjs.com/package/flatten-arguments): Fastest, simplest and smallest. Pass `arguments` object or list of… [more](https://github.com/tunnckocore/flatten-arguments#readme) | [homepage](https://github.com/tunnckocore/flatten-arguments#readme \"Fastest, simplest and smallest. Pass `arguments` object or list of arguments and get flattened array.\")\n- [fn-args](https://www.npmjs.com/package/fn-args): Get the arguments of a function | [homepage](https://github.com/sindresorhus/fn-args \"Get the arguments of a function\")\n- [fn-name](https://www.npmjs.com/package/fn-name): Get the name of a named function | [homepage](https://github.com/sindresorhus/fn-name \"Get the name of a named function\")\n- [get-fn-name](https://www.npmjs.com/package/get-fn-name): Get function name with strictness and correctness in mind. Also… [more](https://github.com/tunnckocore/get-fn-name#readme) | [homepage](https://github.com/tunnckocore/get-fn-name#readme \"Get function name with strictness and correctness in mind. Also works for arrow functions and getting correct name of bounded functions. Powered by [fn-name][].\")\n- [handle-arguments](https://www.npmjs.com/package/handle-arguments): Get separately non-callback arguments in `.arguments` and the last argument… [more](https://github.com/hybridables/handle-arguments#readme) | [homepage](https://github.com/hybridables/handle-arguments#readme \"Get separately non-callback arguments in `.arguments` and the last argument if it [is-callback-function][] in `.callback`. It also works like [sliced][], but returns object with `.arguments` and `.callback` properties.\")\n- [manage-arguments](https://www.npmjs.com/package/manage-arguments): Prevents arguments leakage - managing arguments. From Optimization killers by… [more](https://github.com/tunnckocore/manage-arguments#readme) | [homepage](https://github.com/tunnckocore/manage-arguments#readme \"Prevents arguments leakage - managing arguments. From Optimization killers by Petka Antonov.\")\n- [parse-function](https://www.npmjs.com/package/parse-function): Parse a function, arrow function or string to object with… [more](https://github.com/tunnckocore/parse-function#readme) | [homepage](https://github.com/tunnckocore/parse-function#readme \"Parse a function, arrow function or string to object with name, args, params and body properties.\")\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/tunnckoCore/function-arguments/issues/new).  \nBut before doing anything, please read the [CONTRIBUTING.md](./CONTRIBUTING.md) guidelines.\n\n## [Charlike Make Reagent](http://j.mp/1stW47C) [![new message to charlike][new-message-img]][new-message-url] [![freenode #charlike][freenode-img]][freenode-url]\n\n[![tunnckoCore.tk][author-www-img]][author-www-url] [![keybase tunnckoCore][keybase-img]][keybase-url] [![tunnckoCore npm][author-npm-img]][author-npm-url] [![tunnckoCore twitter][author-twitter-img]][author-twitter-url] [![tunnckoCore github][author-github-img]][author-github-url]\n\n[fn-name]: https://github.com/sindresorhus/fn-name\n[is-callback-function]: https://github.com/tunnckocore/is-callback-function\n[sliced]: https://github.com/aheckmann/sliced\n\n[npmjs-url]: https://www.npmjs.com/package/function-arguments\n[npmjs-img]: https://img.shields.io/npm/v/function-arguments.svg?label=function-arguments\n\n[license-url]: https://github.com/tunnckoCore/function-arguments/blob/master/LICENSE\n[license-img]: https://img.shields.io/npm/l/function-arguments.svg\n\n[downloads-url]: https://www.npmjs.com/package/function-arguments\n[downloads-img]: https://img.shields.io/npm/dm/function-arguments.svg\n\n[codeclimate-url]: https://codeclimate.com/github/tunnckoCore/function-arguments\n[codeclimate-img]: https://img.shields.io/codeclimate/github/tunnckoCore/function-arguments.svg\n\n[travis-url]: https://travis-ci.org/tunnckoCore/function-arguments\n[travis-img]: https://img.shields.io/travis/tunnckoCore/function-arguments/master.svg\n\n[coveralls-url]: https://coveralls.io/r/tunnckoCore/function-arguments\n[coveralls-img]: https://img.shields.io/coveralls/tunnckoCore/function-arguments.svg\n\n[david-url]: https://david-dm.org/tunnckoCore/function-arguments\n[david-img]: https://img.shields.io/david/tunnckoCore/function-arguments.svg\n\n[standard-url]: https://github.com/feross/standard\n[standard-img]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n\n[author-www-url]: http://www.tunnckocore.tk\n[author-www-img]: https://img.shields.io/badge/www-tunnckocore.tk-fe7d37.svg\n\n[keybase-url]: https://keybase.io/tunnckocore\n[keybase-img]: https://img.shields.io/badge/keybase-tunnckocore-8a7967.svg\n\n[author-npm-url]: https://www.npmjs.com/~tunnckocore\n[author-npm-img]: https://img.shields.io/badge/npm-~tunnckocore-cb3837.svg\n\n[author-twitter-url]: https://twitter.com/tunnckoCore\n[author-twitter-img]: https://img.shields.io/badge/twitter-@tunnckoCore-55acee.svg\n\n[author-github-url]: https://github.com/tunnckoCore\n[author-github-img]: https://img.shields.io/badge/github-@tunnckoCore-4183c4.svg\n\n[freenode-url]: http://webchat.freenode.net/?channels=charlike\n[freenode-img]: https://img.shields.io/badge/freenode-%23charlike-5654a4.svg\n\n[new-message-url]: https://github.com/tunnckoCore/ama\n[new-message-img]: https://img.shields.io/badge/ask%20me-anything-green.svg\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tunnckoCore/function-arguments.git"
  },
  "scripts": {
    "commit": "git-cz",
    "coverage": "nyc node test.js",
    "lint": "standard --verbose",
    "lint:coverage": "nyc check-coverage --lines 100 --branches 83 --statements 100 --functions 100",
    "posttest": "npm run lint:coverage",
    "precommit": "git add --all",
    "prerelease": "npm test",
    "pretest": "npm run lint",
    "release": "standard-version --sign --no-verify",
    "report-coverage": "nyc report --reporter=text-lcov | coveralls",
    "test": "npm run coverage"
  },
  "verb": {
    "run": true,
    "toc": false,
    "layout": "empty",
    "tasks": [
      "readme"
    ],
    "related": {
      "list": [
        "parse-function",
        "get-fn-name",
        "fn-name",
        "flatten-arguments",
        "handle-arguments",
        "manage-arguments",
        "fn-args"
      ]
    },
    "lint": {
      "reflinks": true
    },
    "reflinks": [
      "fn-name",
      "is-callback-function",
      "sliced"
    ]
  },
  "version": "1.0.8"
}
