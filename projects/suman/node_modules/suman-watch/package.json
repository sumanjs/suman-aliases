{
  "_args": [
    [
      {
        "raw": "suman-watch@latest",
        "scope": null,
        "escapedName": "suman-watch",
        "name": "suman-watch",
        "rawSpec": "latest",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/alexamil/WebstormProjects/oresoftware/sumanjs/suman-aliases/projects/suman/node_modules/suman"
    ]
  ],
  "_from": "suman-watch@latest",
  "_id": "suman-watch@0.0.1004",
  "_inCache": true,
  "_location": "/suman-watch",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/suman-watch-0.0.1004.tgz_1508113910880_0.40103549999184906"
  },
  "_npmUser": {
    "name": "oresoftware",
    "email": "alex@oresoftware.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "suman-watch@latest",
    "scope": null,
    "escapedName": "suman-watch",
    "name": "suman-watch",
    "rawSpec": "latest",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/suman"
  ],
  "_resolved": "https://registry.npmjs.org/suman-watch/-/suman-watch-0.0.1004.tgz",
  "_shasum": "37180da1adbcc3c84db1a291113d5e3e997e6687",
  "_shrinkwrap": null,
  "_spec": "suman-watch@latest",
  "_where": "/Users/alexamil/WebstormProjects/oresoftware/sumanjs/suman-aliases/projects/suman/node_modules/suman",
  "author": {
    "name": "Olegzandr"
  },
  "bugs": {
    "url": "https://github.com/sumanjs/suman-watch/issues"
  },
  "dependencies": {
    "async": "^2.3.0",
    "chalk": "^1.1.3",
    "chokidar": "^1.6.1",
    "dashdash": "^1.14.1",
    "lodash": "^4.17.4",
    "poolio": "latest",
    "prepend-transform": "latest",
    "residence": "latest",
    "suman-browser-polyfills": "latest",
    "suman-utils": "latest"
  },
  "description": "Watcher module for Suman project",
  "devDependencies": {
    "@types/async": "^2.0.40",
    "@types/chalk": "^0.4.31",
    "@types/chokidar": "^1.7.0",
    "@types/lodash": "^4.14.68",
    "@types/node": "^7.0.5"
  },
  "directories": {},
  "dist": {
    "shasum": "37180da1adbcc3c84db1a291113d5e3e997e6687",
    "tarball": "https://registry.npmjs.org/suman-watch/-/suman-watch-0.0.1004.tgz"
  },
  "gitHead": "9ce6f67af32b41283a931c002a83a7814042212a",
  "homepage": "https://github.com/sumanjs/suman-watch#readme",
  "keywords": [
    "suman",
    "test",
    "mocha",
    "watch",
    "watcher",
    "testing",
    "test",
    "integration"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "oresoftware",
      "email": "alex@oresoftware.com"
    }
  ],
  "name": "suman-watch",
  "optionalDependencies": {},
  "readme": "\n\n###  Suman-Watch\n\n# About\nSuman watch can run test files on changes, transpile/compile code on changes, or both. By default, suman-watch\nwill both transpile and run files. To prevent transpilation, use the `--nt` flag (no-transpile). To prevent running files, \nuse the `--nr` (no-run) flag. If you use both the `--nr` and `--nt` flags, suman-watch does not have much to do :)\n\nJust like with running suman at the command line, suman-watch uses the @transform.sh and @run.sh files,\nwhere they exist. Transpilation will happen by default, if a @transform.sh file exists for that file, \nand the file is in a @src directory, otherwise no transpilation step will occur and the test will only be run.\nIn order to transpile/compile, a @transform.sh file must exist. And if a @transform.sh file exists, a\n@run.sh file must also exist, otherwise suman will have no idea how to execute your transpiled tests. \nHowever, a @run.sh file can exist without a @transform.sh file. \nThe @run.sh and @transform.sh files will be applied to any sibling or child file in the filesystem tree.\n\n\n# Common Usage \nSuman provides some sensible defaults for the two most common patterns when using watch features for testing -\n\n1. When test files change, we run the changed file. This can speed up test development, so you don't have to switch between\neditor and command line. If a @transform.sh/@run.sh exists for this file, we run those instead of executing the changed\nfile directly.\n\n2. Running a set or subset of tests, when project files change. This will watch for files outside of your test directory,\nessentially the inverse of the above. This means you get can get quick feedback when developing new features\non common code paths.\n\n\nSuman allows you to define your own scripts to use when files change, using watch scripts defined in\nyour suman.conf.js file. In order to accomplish 2. above, you should use a watch script.\n\n# Examples\n\nHere are some example commands, with a description of what each command does.\n\n### Command:\n```bash\nsuman --watch\n```\n### Explanation:\n\nThis will watch your testSrcDir (defined in your suman.conf.js file) for changes to any file in that directory\nthat matches a runnable test, and transform and run it when it changes. The source file will only be transformed\nif there is relevant @transform.sh file.\n\n\n### Command:\n```bash\nsuman --watch --nr\n```\n### Explanation:\n\nThis will watch your `testSrcDir` (defined in your `suman.conf.js` file) for changes to any file in any `@src` directory,\nand run the nearest `@transform.sh` for that file, with the path of the changed file represented by the `${SUMAN_TEST_FILE_PATH}`\nenv variable.\n\n\n### Command:\n```bash\nsuman --watch --nt\n```\n### Explanation:\n\nThis is probably not a common choice, but is supported. This will watch your `testSrcDir` \n(defined in your `suman.conf.js` file), but will only watch files for changes for which there is no relevant\n@tranform.sh file. So what will happen is files may change, and they will be executed directly. This will\nallow you to rapidly develop tests which do not require compilation/transpilation. Note using the `--nt` option\nis exactly the same as omitting the option, if there are no @transform.sh files in your test directory.\n\n\n# Suman watch scripts\n\nYou can define watch scripts in your `suman.conf.js` file, like so:\n\n<br>\n\nA complete list of options is here:\n```javascript\n{\n  watch: {\n    \n \n     per: {\n \n       foo: {\n         exec: ''\n         include: [],\n         exclude: [],\n         confOverride: {\n \n         }\n       },\n \n       bar: {\n           exec: ''\n           include: [],\n           exclude: [],\n           confOverride: {\n          \n          }\n       },\n \n       baz: {\n          exec: ''\n          include: [],\n          exclude: [],\n          confOverride: {\n         \n         }\n       }\n \n     }\n \n   }\n}\n\n```\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sumanjs/suman-watch.git"
  },
  "scripts": {
    "test": "suman"
  },
  "types": "index.d.ts",
  "typings": "index.d.ts",
  "version": "0.0.1004"
}
